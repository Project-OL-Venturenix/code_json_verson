{
	"info": {
		"_postman_id": "76cd6d0a-447b-434f-9bbb-db2739f7450c",
		"name": "Project_OL",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27030757",
		"_collection_link": "https://cloudy-star-843525.postman.co/workspace/dd517505-e0d2-40eb-ae47-0b2ddd7cf77a/collection/27030757-76cd6d0a-447b-434f-9bbb-db2739f7450c?action=share&source=collection_link&creator=27030757"
	},
	"item": [
		{
			"name": "auth_Controller",
			"item": [
				{
					"name": "signIN",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userName\": \"oscar1\",\n    \"password\" : \"12345678\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8082/api/auth/signin",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"api",
								"auth",
								"signin"
							]
						}
					},
					"response": []
				},
				{
					"name": "signup Admin",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"oscar\",\n\t\"lastName\": \"chan\",\n\t\"mobile\" : \"66554433\",\n\t\"email\": \"oscar@venturenix.com\",\n    \"userName\": \"oscar1\",\n    \"password\" : \"12345678\",\n    \"company\" : \"Venturenix Lab\",\n    \"title\" : \"Senior Developer\",\n    \"py_experience\" : 1,\n    \"jv_experience\" : 2,\n    \"js_experience\" : 3,\n    \"cs_experience\" : 4,\n    \"sa_experience\" : 5,\n    \"status\" : \"A\",\n    \"role\" : [\"mod\",\"user\",\"admin\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8082/api/auth/signup",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"api",
								"auth",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": " signup User1",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"lucas\",\n\t\"lastName\": \"chan\",\n\t\"mobile\" : \"66554433\",\n\t\"email\": \"lucas@gmail.com\",\n    \"userName\": \"lucas\",\n    \"password\" : \"12345678\",\n    \"company\" : \"Venturenix Lab\",\n    \"title\" : \"Senior Developer\",\n    \"py_experience\" : 1,\n    \"jv_experience\" : 2,\n    \"js_experience\" : 3,\n    \"cs_experience\" : 4,\n    \"sa_experience\" : 5,\n    \"status\" : \"A\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8082/api/auth/signup",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"api",
								"auth",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "addUserInEvent",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{projectOL_base_url}}/api/join?userId=2&eventId=1",
							"host": [
								"{{projectOL_base_url}}"
							],
							"path": [
								"api",
								"join"
							],
							"query": [
								{
									"key": "userId",
									"value": "2"
								},
								{
									"key": "eventId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllUsers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{projectOL_base_url}}/api/users",
							"host": [
								"{{projectOL_base_url}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Event'",
			"item": [
				{
					"name": "addEvent",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"Java大亂鬥\",\n    \"status\":\"status1\",\n    \"eventDate\": \"2024-03-05\",\n    \"targetStartTime\":\"2024-03-05T14:00:00.0000\",\n    \"targetEndTime\": \"2024-03-05T13:00:00.0000\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{projectOL_base_url}}/api/events/add",
							"host": [
								"{{projectOL_base_url}}"
							],
							"path": [
								"api",
								"events",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "addUserInEvent",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{projectOL_base_url}}/api/join?userId=2&eventId=1",
							"host": [
								"{{projectOL_base_url}}"
							],
							"path": [
								"api",
								"join"
							],
							"query": [
								{
									"key": "userId",
									"value": "2"
								},
								{
									"key": "eventId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getQuestionListByEventId",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{projectOL_base_url}}/api/questionList?eventId=1",
							"host": [
								"{{projectOL_base_url}}"
							],
							"path": [
								"api",
								"questionList"
							],
							"query": [
								{
									"key": "eventId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getUserTestCaseByEventId",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{projectOL_base_url}}/api/usertestcases/eventid/1",
							"host": [
								"{{projectOL_base_url}}"
							],
							"path": [
								"api",
								"usertestcases",
								"eventid",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Question",
			"item": [
				{
					"name": "addQuestion",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"question\": \"You are given a 0-indexed 2D integer array brackets where brackets[i] = [ $upper_i$, $percent_i$ ] means that the i^th^ tax bracket has an upper bound of $upper_i$ and is taxed at a rate of $percent_i$. The brackets are sorted by upper bound (i.e. upper i-1 < upper i for 0 < i < brackets.length).\\n\\nTax is calculated as follows:\\nThe first upper0 dollars earned are taxed at a rate of percent0.\\nThe next upper1 - upper0 dollars earned are taxed at a rate of percent1.\\nThe next upper2 - upper1 dollars earned are taxed at a rate of percent2.\\nAnd so on.\\n\\nYou are given an integer income representing the amount of money you earned. Return the amount of money that you have to pay in taxes. Answers within 10^-5 of the actual answer will be accepted.\\n\\nExample 1:\\nInput: brackets = [ [ 3,50 ],[ 7,10 ],[ 12,25 ] ], income = 10\\nOutput: 2.65000\\nExplanation: Based on your income, you have 3 dollars in the 1st tax bracket, 4 dollars in the 2nd tax bracket, and 3 dollars in the 3rd tax bracket. The tax rate for the three tax brackets is 50%, 10%, and 25%, respectively. In total, you pay $3 * 50% + $4 * 10% + $3 * 25% = $2.65 in taxes.\\n\\nExample 2:\\nInput: brackets = [ [ 1,0 ],[ 4,25 ],[ 5,50 ] ], income = 2\\nOutput: 0.25000\\nExplanation: Based on your income, you have 1 dollar in the 1st tax bracket and 1 dollar in the 2nd tax bracket. The tax rate for the two tax brackets is 0% and 25%, respectively. In total, you pay $1 * 0% + $1 * 25% = $0.25 in taxes.\\n\\nExample 3:\\nInput: brackets = [ [ 2,50 ] ], income = 0\\nOutput: 0.00000\\nExplanation: You have no income to tax, so you have to pay a total of $0 in taxes.\\n\\nConstraints:\\n1 <= brackets.length <= 100\\n1 <= upperi <= 1000\\n0 <= percenti <= 100\\n0 <= income <= 1000\\nupperi is sorted in ascending order.\\nAll the values of upperi are unique.\\nThe upper bound of the last tax bracket is greater than or equal to income.\",\n    \"testComputeCase\": \"public static int testComputeCase(Question1 question, int[][] incomeBrackets, int income, double expectedTax) {double actualTax = question.computeTax(incomeBrackets, income);     if (Math.abs(actualTax - expectedTax) < 0.00001) {return 1;} else {return 0;     } }\",\n    \"methodSignatures\": \"public double computeTax(int[][] brackets, int income)\",\n    \"targetCompleteTime\": 1000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{projectOL_base_url}}/api/questions/add",
							"host": [
								"{{projectOL_base_url}}"
							],
							"path": [
								"api",
								"questions",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "Submit",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJvc2NhciIsImlhdCI6MTcwOTAwMDMxNywiZXhwIjoxNzA5MDg2NzE3fQ.5YuWLvf5YSUEwUq8L3NkxSYz6095u06ee-BWhzQu6kw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8092/api/questionSubmit/1",
							"host": [
								"localhost"
							],
							"port": "8092",
							"path": [
								"api",
								"questionSubmit",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "add_Test_case1",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"questionId\": 1,\n    \"expectedOutput\": \"1\",\n    \"input1\": \"new int[][] {{100, 2}}, 99\",\n    \"input2\": \"1.98000\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8082/api/testcases/add",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"api",
								"testcases",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add_Test_case2",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"questionId\": 1,\n   \"expectedOutput\": \"1\",\n  \"input1\": \"new int[][] {{10, 5}, {20, 10}, {30, 15}, {40, 20}}, 500\",\n  \"input2\": \"127.50000\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8082/api/testcases/add",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"api",
								"testcases",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_Testcase_by_id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJvc2NhciIsImlhdCI6MTcwOTAwMDMxNywiZXhwIjoxNzA5MDg2NzE3fQ.5YuWLvf5YSUEwUq8L3NkxSYz6095u06ee-BWhzQu6kw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8092/api/testcase/1",
							"host": [
								"localhost"
							],
							"port": "8092",
							"path": [
								"api",
								"testcase",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "add Question2",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJvc2NhciIsImlhdCI6MTcwOTAzNjU1OSwiZXhwIjoxNzA5MTIyOTU5fQ.wApaiiip1QlBNBp6XyCEUzNXvs4pjOd7UgMUMcehwNY",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"question\": \"You are given a 0-indexed 2D integer array brackets where brackets[i] = [ $upper_i$, $percent_i$ ] means that the i^th^ tax bracket has an upper bound of $upper_i$ and is taxed at a rate of $percent_i$. The brackets are sorted by upper bound (i.e. upper i-1 < upper i for 0 < i < brackets.length).\\n\\nTax is calculated as follows:\\nThe first upper0 dollars earned are taxed at a rate of percent0.\\nThe next upper1 - upper0 dollars earned are taxed at a rate of percent1.\\nThe next upper2 - upper1 dollars earned are taxed at a rate of percent2.\\nAnd so on.\\n\\nYou are given an integer income representing the amount of money you earned. Return the amount of money that you have to pay in taxes. Answers within 10^-5 of the actual answer will be accepted.\\n\\nExample 1:\\nInput: brackets = [ [ 3,50 ],[ 7,10 ],[ 12,25 ] ], income = 10\\nOutput: 2.65000\\nExplanation: Based on your income, you have 3 dollars in the 1st tax bracket, 4 dollars in the 2nd tax bracket, and 3 dollars in the 3rd tax bracket. The tax rate for the three tax brackets is 50%, 10%, and 25%, respectively. In total, you pay $3 * 50% + $4 * 10% + $3 * 25% = $2.65 in taxes.\\n\\nExample 2:\\nInput: brackets = [ [ 1,0 ],[ 4,25 ],[ 5,50 ] ], income = 2\\nOutput: 0.25000\\nExplanation: Based on your income, you have 1 dollar in the 1st tax bracket and 1 dollar in the 2nd tax bracket. The tax rate for the two tax brackets is 0% and 25%, respectively. In total, you pay $1 * 0% + $1 * 25% = $0.25 in taxes.\\n\\nExample 3:\\nInput: brackets = [ [ 2,50 ] ], income = 0\\nOutput: 0.00000\\nExplanation: You have no income to tax, so you have to pay a total of $0 in taxes.\\n\\nConstraints:\\n1 <= brackets.length <= 100\\n1 <= upperi <= 1000\\n0 <= percenti <= 100\\n0 <= income <= 1000\\nupperi is sorted in ascending order.\\nAll the values of upperi are unique.\\nThe upper bound of the last tax bracket is greater than or equal to income.\",\n    \"testComputeCase\":\"public static int testComputeCase(Question1 question, int[][] incomeBrackets, int income, double expectedTax) {double actualTax = question.computeTax(incomeBrackets, income);     if (Math.abs(actualTax - expectedTax) < 0.00001) {return 1;} else {return 0;     } }\",\n    \"methodSignatures\":\"public double computeTax(int[][] brackets, int income)\",\n    \"targetCompleteTime\": 1000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8082/api/questions/add",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"api",
								"questions",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add Question3",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJvc2NhciIsImlhdCI6MTcwOTAzNjU1OSwiZXhwIjoxNzA5MTIyOTU5fQ.wApaiiip1QlBNBp6XyCEUzNXvs4pjOd7UgMUMcehwNY",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"question\": \"TESTing \",\n    \"testComputeCase\":\"public static int testComputeCase(Question1 question, int[][] incomeBrackets, int income, double expectedTax) {double actualTax = question.computeTax(incomeBrackets, income);     if (Math.abs(actualTax - expectedTax) < 0.00001) {return 1;} else {return 0;     } }\",\n    \"methodSignatures\":\"public double computeTax(int[][] brackets, int income)\",\n    \"targetCompleteTime\": 2000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8082/api/questions/add",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"api",
								"questions",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add Test Case 2",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJvc2NhciIsImlhdCI6MTcwOTAzNjU1OSwiZXhwIjoxNzA5MTIyOTU5fQ.wApaiiip1QlBNBp6XyCEUzNXvs4pjOd7UgMUMcehwNY",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"questionId\": \"1\",\n    \"expectedOutput\": \"1.98000\",\n    \"input1\": \" new int[][] {{100, 2}}\",\n    \"input2\": \"99\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8082/api/testcases/add",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"api",
								"testcases",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add question Bonus1",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"bonusRuntime\":1000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{projectOL_base_url}}/api/questionBonus/1",
							"host": [
								"{{projectOL_base_url}}"
							],
							"path": [
								"api",
								"questionBonus",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "add question Bonus2",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"bonusRuntime\":2000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{projectOL_base_url}}/api/questionBonus/2",
							"host": [
								"{{projectOL_base_url}}"
							],
							"path": [
								"api",
								"questionBonus",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "add question Bonus3",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"bonusRuntime\":1500\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{projectOL_base_url}}/api/questionBonus/1",
							"host": [
								"{{projectOL_base_url}}"
							],
							"path": [
								"api",
								"questionBonus",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "addQuestionInEvent3",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{projectOL_base_url}}/api/addEventQuestion/event/1/question/3",
							"host": [
								"{{projectOL_base_url}}"
							],
							"path": [
								"api",
								"addEventQuestion",
								"event",
								"1",
								"question",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "addQuestionInEvent2",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{projectOL_base_url}}/api/addEventQuestion/event/1/question/3",
							"host": [
								"{{projectOL_base_url}}"
							],
							"path": [
								"api",
								"addEventQuestion",
								"event",
								"1",
								"question",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "addQuestionInEvent1",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{projectOL_base_url}}/api/addEventQuestion/event/1/question/3",
							"host": [
								"{{projectOL_base_url}}"
							],
							"path": [
								"api",
								"addEventQuestion",
								"event",
								"1",
								"question",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "get Question",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{projectOL_base_url}}/api/questions",
							"host": [
								"{{projectOL_base_url}}"
							],
							"path": [
								"api",
								"questions"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "testcases",
			"item": [
				{
					"name": "{{projectOL_base_url}}/api/testcases",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{projectOL_base_url}}/api/testcases",
							"host": [
								"{{projectOL_base_url}}"
							],
							"path": [
								"api",
								"testcases"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User Score",
			"item": [
				{
					"name": "getUserTestCaseByEventId",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{projectOL_base_url}}/api/usertestcases/eventid/1",
							"host": [
								"{{projectOL_base_url}}"
							],
							"path": [
								"api",
								"usertestcases",
								"eventid",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "addScoreQ1",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"submitTime\":\"2024-03-17T14:31:30.845982\",\n    \"runTimeByMsec\": 1000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{projectOL_base_url}}/api/userscores/addScore?eventid=1&userid=2&questionid=1&testcasePassTotal=10",
							"host": [
								"{{projectOL_base_url}}"
							],
							"path": [
								"api",
								"userscores",
								"addScore"
							],
							"query": [
								{
									"key": "eventid",
									"value": "1"
								},
								{
									"key": "userid",
									"value": "2"
								},
								{
									"key": "questionid",
									"value": "1"
								},
								{
									"key": "testcasePassTotal",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "addScoreQ2",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"submitTime\":\"2024-03-17T14:41:30.845982\",\n    \"runTimeByMsec\": 2000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{projectOL_base_url}}/api/userscores/addScore?eventid=1&userid=2&questionid=2&testcasePassTotal=10",
							"host": [
								"{{projectOL_base_url}}"
							],
							"path": [
								"api",
								"userscores",
								"addScore"
							],
							"query": [
								{
									"key": "eventid",
									"value": "1"
								},
								{
									"key": "userid",
									"value": "2"
								},
								{
									"key": "questionid",
									"value": "2"
								},
								{
									"key": "testcasePassTotal",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "addScoreQ3",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"submitTime\":\"2024-03-17T14:51:30.845982\",\n    \"runTimeByMsec\": 1500\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{projectOL_base_url}}/api/userscores/addScore?eventid=1&userid=2&questionid=3&testcasePassTotal=10",
							"host": [
								"{{projectOL_base_url}}"
							],
							"path": [
								"api",
								"userscores",
								"addScore"
							],
							"query": [
								{
									"key": "eventid",
									"value": "1"
								},
								{
									"key": "userid",
									"value": "2"
								},
								{
									"key": "questionid",
									"value": "3"
								},
								{
									"key": "testcasePassTotal",
									"value": "10"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}