{
  "token": null,
  "questionId": 1,
  "classDeclaration": "import java.util.*;\nimport java.math.*;\n public class Question1{",
  "code": "public double computeTax(int[][] brackets, int income){ \n //Enter the code Here.Your class should be named Question1.\n \n }\n}",
  "mainMethod": "public static void main(String[] args) {\n    int counter = 0;\n    Question1 question1 = new Question1();\n\n \ncounter += testComputeCase(question1,  new int[][] {{100, 2}}, 99, 1.98000);  \ncounter += testComputeCase(question1, new int[][] {{1, 5}, {10, 10}, {100, 20}, {1000, 30}}, 1000, 288.95000); \ncounter += testComputeCase(question1, new int[][] {{3, 50}, {7, 10}, {12, 25}}, 10, 2.65000); \ncounter += testComputeCase(question1, new int[][] {{3, 50}, {7, 10}, {12, 25}}, 12, 3.15000); \ncounter += testComputeCase(question1, new int[][] {{1, 0}, {4, 25}, {5, 50}}, 2, 0.25000); \ncounter += testComputeCase(question1, new int[][] {{2, 50}},0, 0.00000); \ncounter += testComputeCase(question1, new int[][] {{2, 50}, {3, 99}, {4, 99}}, 3, 1.9900); \ncounter += testComputeCase(question1, new int[][] {{1, 0}},0, 0.00000); \ncounter += testComputeCase(question1, new int[][] {{1, 5}, {10, 10}, {100, 20}, {1000, 30}}, 1000, 288.95000); \n        long startTime = System.nanoTime();\n        System.out.println(\"Test Case Result: \" + counter + \" / 10\");\n        long endTime = System.nanoTime();\n        long duration = (endTime - startTime) / 1000000; // Milliseconds\n        System.out.println(\n                \"Time taken for Test Case 10: \" + duration + \" milliseconds\");\n}\npublic static int testComputeCase(Question1 question, int[][] incomeBrackets, int income, double expectedTax) {double actualTax = question.computeTax(incomeBrackets, income);     if (Math.abs(actualTax - expectedTax) < 0.00001) {return 1;} else {return 0;     } }}",
  "createdby": null,
  "updateddate": "2024-02-27T20:22:46.191517",
  "updatedby": null,
  "tye": "Bearer"
}